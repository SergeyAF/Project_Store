/* --- Fonts --- */
/* --- Font Color --- */
/* --- Font Size`s --- */
@font-face {
  font-family: "ClearSansItalic";
  font-weight: italic;
  src: url("../fonts/ClearSansItalic/ClearSansItalic.eot?") format("eot"), url("../fonts/ClearSansItalic/ClearSansItalic.woff") format("woff"), url("../fonts/ClearSansItalic/ClearSansItalic.ttf") format("truetype"); }

@font-face {
  font-family: "ClearSansBold";
  font-weight: bold;
  src: url("../fonts/ClearSansBold/ClearSansBold.eot?") format("eot"), url("../fonts/ClearSansBold/ClearSansBold.woff") format("woff"), url("../fonts/ClearSansBold/ClearSansBold.ttf") format("truetype"); }

@font-face {
  font-family: 'roboto_bold';
  src: url("../../fonts/roboto-bold-webfont.woff") format("woff"), url("../../fonts/roboto-bold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'roboto_medium';
  src: url("../../fonts/roboto-medium-webfont.woff") format("woff"), url("../../fonts/roboto-medium-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'roboto_regular';
  src: url("../../fonts/roboto-regular-webfont.woff") format("woff"), url("../../fonts/roboto-regular-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'raleway_bold';
  src: url("../../fonts/raleway-bold-webfont.woff") format("woff"), url("../../fonts/raleway-bold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'lato_semibold';
  src: url("../../fonts/lato-semibold-webfont.woff") format("woff"), url("../../fonts/lato-semibold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'opensans_semibold';
  src: url("../../fonts/opensans-semibold-webfont.woff") format("woff"), url("../../fonts/opensans-semibold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

/* http://meyerweb.com/eric/tools/css/reset/
   v4.0 | 20180602
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
main, menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline; }

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, main, menu, nav, section {
  display: block; }

/* HTML5 hidden-attribute fix for newer browsers */
*[hidden] {
  display: none; }

body {
  line-height: 1; }

ol, ul {
  list-style: none; }

blockquote, q {
  quotes: none; }

blockquote:before, blockquote:after,
q:before, q:after {
  content: '';
  content: none; }

table {
  border-collapse: collapse;
  border-spacing: 0; }

/* --- Fonts --- */
/* --- Font Color --- */
/* --- Font Size`s --- */
@font-face {
  font-family: "ClearSansItalic";
  font-weight: italic;
  src: url("../fonts/ClearSansItalic/ClearSansItalic.eot?") format("eot"), url("../fonts/ClearSansItalic/ClearSansItalic.woff") format("woff"), url("../fonts/ClearSansItalic/ClearSansItalic.ttf") format("truetype"); }

@font-face {
  font-family: "ClearSansBold";
  font-weight: bold;
  src: url("../fonts/ClearSansBold/ClearSansBold.eot?") format("eot"), url("../fonts/ClearSansBold/ClearSansBold.woff") format("woff"), url("../fonts/ClearSansBold/ClearSansBold.ttf") format("truetype"); }

@font-face {
  font-family: 'roboto_bold';
  src: url("../../fonts/roboto-bold-webfont.woff") format("woff"), url("../../fonts/roboto-bold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'roboto_medium';
  src: url("../../fonts/roboto-medium-webfont.woff") format("woff"), url("../../fonts/roboto-medium-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'roboto_regular';
  src: url("../../fonts/roboto-regular-webfont.woff") format("woff"), url("../../fonts/roboto-regular-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'raleway_bold';
  src: url("../../fonts/raleway-bold-webfont.woff") format("woff"), url("../../fonts/raleway-bold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'lato_semibold';
  src: url("../../fonts/lato-semibold-webfont.woff") format("woff"), url("../../fonts/lato-semibold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

@font-face {
  font-family: 'opensans_semibold';
  src: url("../../fonts/opensans-semibold-webfont.woff") format("woff"), url("../../fonts/opensans-semibold-webfont.woff2") format("woff2");
  font-weight: normal;
  font-style: normal;
  font-display: swap; }

/* --- Fonts --- */
/* --- Font Color --- */
/* --- Font Size`s --- */
/* header {
    @extend %ClearSansBold;
} */
span {
  color: #263238; }

.tabs-list {
  list-style: none; }

body, * {
  padding: 0;
  margin: 0;
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  font-family: "roboto_medium", "arial";
  color: #263238;
  line-height: 1; }

a {
  text-decoration: none;
  color: inherit; }
  a:focus {
    outline: none; }

.container {
  max-width: 1200px;
  padding: 0 15px;
  margin: 0 auto;
  width: 100%; }
  .container-fluid {
    max-width: 100%;
    background-color: #f4f5f6;
    padding-top: 120px; }

.row {
  margin: 0 -15px; }

h1, h2, h3, h4, h5, h6 {
  font-family: "roboto_bold", "arial"; }

h2 {
  font-size: 36px;
  margin: 0 0 60px; }

h3 {
  font-size: 24px; }

h4 {
  font-size: 22px; }

li:focus {
  outline: none; }

.tabs-list {
  margin-bottom: 60px; }

.text-center {
  text-align: center; }

.d-f {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.fw-w {
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap; }

.jc-c {
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center; }

.jc-sb {
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between; }

.ai-c {
  -webkit-box-align: center;
  -webkit-align-items: center;
  -ms-flex-align: center;
  align-items: center; }

.fd-c {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column; }

.col {
  padding: 0 15px;
  margin: 0 0 32px;
  height: 100%; }
  .col-4 {
    width: 25%; }
    @media (max-width: 1024px) {
      .col-4 {
        width: calc(100% / 3); } }
    @media (max-width: 768px) {
      .col-4 {
        width: 50%; } }
    @media (max-width: 700px) {
      .col-4 {
        width: 100%; } }
  .col-3 {
    width: calc(100% / 3); }

.index-header {
  margin: 20px 0;
  color: #e74c3c; }

.header-btn {
  height: 32px;
  width: 72px;
  border: none;
  background-color: #fff;
  color: #fff;
  font-family: "roboto_regular";
  font-size: 12px;
  -webkit-border-radius: 3px;
  border-radius: 3px;
  cursor: pointer; }
  .header-btn:focus {
    outline: none; }
  .header-btn:hover {
    opacity: 0.8; }

.btn-green {
  background-color: #8bc34a; }

.btn-red {
  background-color: #e74c3c;
  margin-left: 7px; }

.header-top {
  height: 90px; }
  .header-top .help {
    font-family: "roboto_regular", "arial";
    font-size: 15px;
    color: #546e7a; }
    .header-top .help::before {
      content: 'Need help? ';
      color: #e74c3c; }
  .header-top .basket {
    width: 34px;
    height: 34px;
    -webkit-border-radius: 50%;
    border-radius: 50%;
    background-color: #f5f5f5;
    margin: 0 26px; }

.header-bottom {
  height: 60px;
  width: 100%;
  background-color: #263238;
  font-size: 14px; }
  .header-bottom ul li {
    color: #fff;
    margin-right: 40px; }
    .header-bottom ul li a:hover {
      color: #8bc34a; }

.footer {
  background-color: #263238;
  font-size: 15px;
  font-family: "roboto_regular", sans-serif; }
  .footer span {
    display: block; }
  .footer-title {
    font-size: 22px;
    color: #fff;
    margin-bottom: 25px;
    font-family: "raleway_bold", sans-serif; }
  .footer-first-line {
    background-color: #729e4c;
    height: 3px;
    width: 50px;
    margin-bottom: 30px; }
  .footer-line {
    background-color: #8bc34a;
    height: 3px;
    width: 50px;
    margin-bottom: 30px; }
  .footer-p {
    color: #b7c3c8;
    margin-bottom: 40px;
    line-height: 1.5; }
  .footer-contact-holder {
    padding-left: 35px;
    font-family: "lato_semibold", sans-serif; }
    .footer-contact-holder .address {
      position: relative;
      color: #fff;
      font-size: 14px;
      margin-bottom: 25px; }
      .footer-contact-holder .address i {
        position: absolute;
        top: 0;
        left: -35px; }
    .footer-contact-holder i {
      color: #729e4c; }
    .footer-contact-holder .contact-phone {
      position: relative;
      color: #fff;
      font-size: 14px; }
      .footer-contact-holder .contact-phone i {
        -webkit-transform: rotate(90deg);
        -ms-transform: rotate(90deg);
        transform: rotate(90deg);
        position: absolute;
        top: 0;
        left: -35px; }
  .footer-list {
    padding-left: 20px; }
    .footer-list li {
      color: #b7c3c8;
      position: relative;
      margin-bottom: 20px; }
      .footer-list li:last-child {
        margin-bottom: 0; }
      .footer-list li:before {
        content: '\f105';
        position: absolute;
        top: 0;
        left: -20px;
        color: #8bc34a;
        -webkit-font-smoothing: antialiased;
        display: block;
        font-style: normal;
        font-variant: normal;
        text-rendering: auto;
        line-height: 1;
        font-family: Font Awesome\ 5 Free;
        font-weight: 900;
        font-size: 14px; }
  .footer-social-holder {
    margin-bottom: 40px; }
    .footer-social-holder li {
      padding: 0 3px; }
      .footer-social-holder li .icon-holder {
        height: 30px;
        width: 30px;
        -webkit-border-radius: 2px;
        border-radius: 2px;
        position: relative; }
        .footer-social-holder li .icon-holder i {
          color: #c3c7ca;
          position: absolute;
          top: 8px;
          left: 7px;
          font-size: 3x; }
      .footer-social-holder li .facebook-holder {
        background-color: #3a5482; }
        .footer-social-holder li .facebook-holder i {
          top: 9px;
          left: 16px; }
      .footer-social-holder li .twitter-holder {
        background-color: #4c8ebe; }
        .footer-social-holder li .twitter-holder i {
          left: 8px; }
      .footer-social-holder li .youtube-holder {
        background-color: #e52d27; }
      .footer-social-holder li .mail-holder {
        background-color: #c3c7ca; }
        .footer-social-holder li .mail-holder i {
          color: #951b2b; }
      .footer-social-holder li .linkedin-holder {
        background-color: #1565c0; }
        .footer-social-holder li .linkedin-holder i {
          left: 9px; }
  .footer-join-title {
    font-size: 20px;
    color: #fff;
    margin-bottom: 20px; }
  .footer-input-holder {
    position: relative;
    border: 2px solid #111;
    border-bottom: none; }
    .footer-input-holder input {
      background-color: #263238;
      height: 40px;
      width: 100%;
      padding-left: 15px;
      font-size: 14px;
      border: none; }
    .footer-input-holder .footer-btn {
      width: 40px;
      height: 40px;
      position: absolute;
      background-color: #729e4c;
      top: 0;
      right: 0;
      outline: none;
      border: none;
      cursor: pointer; }
      .footer-input-holder .footer-btn i {
        color: #fff; }
  .footer .container {
    padding-top: 120px;
    padding-bottom: 100px; }
    @media (max-width: 800px) {
      .footer .container {
        padding-top: 85px;
        padding-bottom: 65px; } }
  .footer-down {
    max-width: 100%;
    width: 100%;
    padding: 0 15px;
    border-top: 1px solid #3f4b52; }
    .footer-down-text {
      color: #919699;
      text-align: center;
      padding: 30px 0; }
  @media (max-width: 1280px) {
    .footer .footer-col {
      width: 25%; } }
  @media (max-width: 800px) {
    .footer .footer-col {
      width: 100%; } }

.bg-block {
  background-position: 50% 0;
  background-repeat: no-repeat;
  -webkit-background-size: cover;
  background-size: cover; }

.visual-section {
  min-height: 300px; }

.visual-h {
  color: #fff;
  margin-bottom: 30px; }

.input-holder {
  width: 670px; }
  @media (max-width: 700px) {
    .input-holder {
      width: 320px; } }
  .input-holder input {
    -webkit-transition: -webkit-box-shadow 0.3s ease-in-out;
    transition: -webkit-box-shadow 0.3s ease-in-out;
    -o-transition: box-shadow 0.3s ease-in-out;
    transition: box-shadow 0.3s ease-in-out;
    transition: box-shadow 0.3s ease-in-out, -webkit-box-shadow 0.3s ease-in-out;
    font-size: 14px;
    border: none;
    -webkit-border-radius: 3px;
    border-radius: 3px;
    width: 100%;
    height: 60px;
    padding: 15px 25px;
    -webkit-box-shadow: 0 1px 10px rgba(100, 100, 100, 0.75);
    box-shadow: 0 1px 10px rgba(100, 100, 100, 0.75); }
    .input-holder input::-webkit-input-placeholder {
      color: #90a4ae; }
    .input-holder input::-moz-placeholder {
      opacity: 1;
      color: #90a4ae; }
    .input-holder input:-moz-placeholder {
      color: #90a4ae; }
    .input-holder input:-ms-input-placeholder {
      color: #90a4ae; }
    .input-holder input.placeholder {
      color: #90a4ae; }
    .input-holder input:focus, .input-holder input:active {
      -webkit-box-shadow: 0 1px 10px rgba(124, 178, 64, 0.75);
      box-shadow: 0 1px 10px rgba(124, 178, 64, 0.75);
      outline: none; }

.tabs-list li {
  padding: 0 3px; }
  @media (max-width: 768px) {
    .tabs-list li {
      margin-bottom: 6px; } }
  .tabs-list li.ui-state-active a {
    background-color: #e74c3c;
    /* padding: 13px 27px; */
    color: #fff; }
  .tabs-list li.ui-state-active a:hover {
    background-color: #ec5849;
    color: #fff; }

.tabs-list a {
  -webkit-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  -o-transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  transition: color 0.3s ease-in-out, background-color 0.3s ease-in-out;
  display: block;
  padding: 13px 20px;
  background-color: #fff;
  line-height: 1;
  font-size: 14px;
  color: #263238; }
  .tabs-list a:hover {
    background-color: #ec5849;
    color: #fff; }

.hot-product {
  position: relative; }
  .hot-product::before {
    height: 0;
    width: 0;
    border-top: 65px solid #8bc34a;
    border-right: 65px solid transparent;
    position: absolute;
    content: '';
    display: block;
    top: 0;
    left: 0; }
  .hot-product::after {
    position: absolute;
    top: 12px;
    left: 14px;
    content: '\f0e7';
    display: block;
    -webkit-font-smoothing: antialiased;
    font-style: normal;
    font-variant: normal;
    text-rendering: auto;
    line-height: 1;
    font-family: Font Awesome\ 5 Free;
    font-weight: 900;
    color: #fff; }

.product-holder {
  -webkit-transition: -webkit-box-shadow 0.3s ease-in-out;
  transition: -webkit-box-shadow 0.3s ease-in-out;
  -o-transition: box-shadow 0.3s ease-in-out;
  transition: box-shadow 0.3s ease-in-out;
  transition: box-shadow 0.3s ease-in-out, -webkit-box-shadow 0.3s ease-in-out;
  background-color: #fff;
  border: 1px solid #e7ecf2;
  cursor: pointer; }
  .product-holder:hover {
    -webkit-box-shadow: 0 15px 15px -7px #ccc;
    box-shadow: 0 15px 15px -7px #ccc; }
  .product-holder .img-holder {
    display: block;
    height: 250px;
    background-color: #d4d4d4; }
  .product-holder .product-info {
    padding: 20px 32px;
    border-bottom: 1px solid #e7ecf2; }
    .product-holder .product-info .pr-info_container {
      -webkit-box-orient: vertical;
      -webkit-box-direction: normal;
      -webkit-flex-direction: column;
      -ms-flex-direction: column;
      flex-direction: column;
      -webkit-box-align: start;
      -webkit-align-items: flex-start;
      -ms-flex-align: start;
      align-items: flex-start; }
      .product-holder .product-info .pr-info_container .product-name {
        font-size: 18px;
        line-height: 1;
        margin-bottom: 10px; }
      .product-holder .product-info .pr-info_container .product-category {
        font-size: 14px;
        color: #8bc34a; }
    .product-holder .product-info .product-price {
      font-family: "roboto_bold", "arial";
      font-size: 20px;
      -webkit-align-self: center;
      -ms-flex-item-align: center;
      align-self: center; }
  .product-holder .vendor-info {
    padding: 17px 30px 21px; }
  .product-holder .vendor-logo {
    display: inline-block;
    width: 30px;
    height: 30px;
    background-color: #b5b5b5;
    -webkit-border-radius: 15px;
    border-radius: 15px;
    margin-right: 15px; }
  .product-holder .vendor-name {
    color: #546e7a;
    font-size: 14px; }
  .product-holder .product-reiting_holder .icon-holder {
    margin-right: 12px; }
  .product-holder .product-reiting_text {
    font-size: 12px; }
    .product-holder .product-reiting_text:before {
      content: '(';
      color: #b0bec5; }
    .product-holder .product-reiting_text:after {
      content: ')';
      color: #b0bec5; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
